services:
  producer:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    command: ["npm", "run", "producer"]
    depends_on:
      - kafka

  consumer1:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    command: ["npm", "run", "consumer"]
    depends_on:
      - kafka

  consumer2:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    command: [ "npm", "run", "consumer" ]
    depends_on:
      - kafka

  kafka:
    image: bitnami/kafka:latest
    volumes:
      - ./data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER